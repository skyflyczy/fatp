<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.telecwin.fatp.dao.project.ListingBaseDao">
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO listing_base (
        	Id ,
        	ExchangeId ,
        	MemberId ,
        	LoanUserId ,
        	ProjectRecordId ,
        	ProjectCode ,
        	ProjectGuid ,
        	PartnerBizId ,
        	ProjectSettleCode ,
        	ProjectName ,
        	ProjectFullName ,
        	ProductTypeId ,
        	ProjectTypeId ,
        	ProjectUnitPrice ,
        	ProjectMoney,
        	ProjectAmountMin,
        	ProvinceId ,
        	CityId ,
        	IndustryId ,
        	ProjectCost ,
        	IsGuarantee ,
        	IsPledge ,
        	IsInsurance ,
        	ProjectUsing ,
        	ProjectLimit,
        	ProjectLimitTypeId,
        	ValueDateChangeStyle ,
        	ExpireDateChangeStyle ,
        	ValueDate ,
        	ExpireDate ,
        	ProjectStatus ,
        	OriginType ,
        	OriginatorId ,
        	CreateTime ,
        	CreateOperatorId ,
        	UpdateTime ,
        	UpateOperatorId ,
        	AuditTime ,
        	AuditOperatorId ,
        	RaiseMoney ,
        	InvestSpareAmount ,
        	VersionNo 
        ) VALUES (
        	#{id} ,
        	#{exchangeId} ,
        	#{memberId} ,
        	#{loanUserId} ,
        	#{projectRecordId} ,
        	#{projectCode} ,
        	#{projectGuid} ,
        	#{partnerBizId} ,
        	#{projectSettleCode} ,
        	#{projectName} ,
        	#{projectFullName} ,
        	#{productTypeId} ,
        	#{projectTypeId} ,
        	#{projectUnitPrice} ,
        	#{projectMoney},
        	#{projectAmountMin},
        	#{provinceId} ,
        	#{cityId} ,
        	#{industryId} ,
        	#{projectCost} ,
        	#{isGuarantee} ,
        	#{isPledge} ,
        	#{isInsurance} ,
        	#{projectUsing} ,
        	#{projectLimit},
        	#{projectLimitTypeId},
        	#{valueDateChangeStyle} ,
        	#{expireDateChangeStyle} ,
        	#{valueDate} ,
        	#{expireDate} ,
        	#{projectStatus} ,
        	#{originType} ,
        	#{originatorId} ,
        	now() ,
        	#{createOperatorId} ,
        	now() ,
        	#{upateOperatorId} ,
        	#{auditTime} ,
        	#{auditOperatorId} ,
        	#{raiseMoney} ,
        	#{investSpareAmount} ,
        	1
        )
    	<selectKey resultType="java.lang.Integer" keyProperty="id">
            select LAST_INSERT_ID() as id
        </selectKey>
	</insert>
    
	<update id="updateByVersion">
        UPDATE listing_base SET
	        LoanUserId = #{loanUserId} ,
	        PartnerBizId = #{partnerBizId} ,
	        ProjectName = #{projectName} ,
	        ProjectFullName = #{projectFullName} ,
	        ProductTypeId = #{productTypeId} ,
	        ProjectTypeId = #{projectTypeId} ,
	        ProjectUnitPrice = #{projectUnitPrice} ,
	        ProjectMoney = #{projectMoney} ,
	        ProjectAmountMin = #{projectAmountMin} ,
	        ProvinceId = #{provinceId} ,
	        CityId = #{cityId} ,
	        IndustryId = #{industryId} ,
	        ProjectCost = #{projectCost} ,
	        IsGuarantee = #{isGuarantee} ,
	        IsPledge = #{isPledge} ,
	        IsInsurance = #{isInsurance} ,
	        ProjectUsing = #{projectUsing} ,
	        ProjectLimit = #{projectLimit} ,
	        ProjectLimitTypeId = #{projectLimitTypeId} ,
	        ValueDateChangeStyle = #{valueDateChangeStyle} ,
	        ExpireDateChangeStyle = #{expireDateChangeStyle} ,
	        ValueDate = #{valueDate} ,
	        ExpireDate = #{expireDate} ,
	        ProjectStatus = #{projectStatus} ,
	        OriginType = #{originType} ,
	        OriginatorId = #{originatorId} ,
	        UpdateTime = now() ,
	        UpateOperatorId = #{upateOperatorId} ,
	        AuditTime = #{auditTime} ,
			AuditOperatorId = #{auditOperatorId} ,
			RaiseMoney = #{raiseMoney},
			InvestSpareAmount = #{investSpareAmount},
	        VersionNo =  VersionNo + 1
        WHERE 
	        Id = #{id}  AND VersionNo = #{versionNo}
	</update>

    <delete id="deleteByVersion" parameterType="java.util.Map">
        DELETE FROM listing_base WHERE
        Id = #{id} AND VersionNo = #{versionNo}
    </delete>
	
	<sql id="where">
		<where>	      				
	       <if test="@Ognl@isNotEmpty(id)">
				AND Id = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(exchangeId)">
				AND ExchangeId = #{exchangeId}
			</if>
	       <if test="@Ognl@isNotEmpty(memberId)">
				AND MemberId = #{memberId}
			</if>
	       <if test="@Ognl@isNotEmpty(loanUserId)">
				AND LoanUserId = #{loanUserId}
			</if>
	       <if test="@Ognl@isNotEmpty(projectRecordId)">
				AND ProjectRecordId = #{projectRecordId}
			</if>
	       <if test="@Ognl@isNotEmpty(projectCode)">
				AND ProjectCode = #{projectCode}
			</if>
	       <if test="@Ognl@isNotEmpty(projectGuid)">
				AND ProjectGuid = #{projectGuid}
			</if>
	       <if test="@Ognl@isNotEmpty(partnerBizId)">
				AND PartnerBizId = #{partnerBizId}
			</if>
	       <if test="@Ognl@isNotEmpty(projectSettleCode)">
				AND ProjectSettleCode = #{projectSettleCode}
			</if>
	       <if test="@Ognl@isNotEmpty(projectName)">
				AND ProjectName = #{projectName}
			</if>
	       <if test="@Ognl@isNotEmpty(projectFullName)">
				AND ProjectFullName = #{projectFullName}
			</if>
	       <if test="@Ognl@isNotEmpty(productTypeId)">
				AND ProductTypeId = #{productTypeId}
			</if>
	       <if test="@Ognl@isNotEmpty(projectTypeId)">
				AND ProjectTypeId = #{projectTypeId}
			</if>
	       <if test="@Ognl@isNotEmpty(projectUnitPrice)">
				AND ProjectUnitPrice = #{projectUnitPrice}
			</if>
	       <if test="@Ognl@isNotEmpty(projectMoney)">
				AND ProjectMoney = #{projectMoney}
			</if>
	       <if test="@Ognl@isNotEmpty(projectAmountMin)">
				AND ProjectAmountMin = #{projectAmountMin}
			</if>
	       <if test="@Ognl@isNotEmpty(provinceId)">
				AND ProvinceId = #{provinceId}
			</if>
	       <if test="@Ognl@isNotEmpty(cityId)">
				AND CityId = #{cityId}
			</if>
	       <if test="@Ognl@isNotEmpty(industryId)">
				AND IndustryId = #{industryId}
			</if>
	       <if test="@Ognl@isNotEmpty(projectCost)">
				AND ProjectCost = #{projectCost}
			</if>
	       <if test="@Ognl@isNotEmpty(isGuarantee)">
				AND IsGuarantee = #{isGuarantee}
			</if>
	       <if test="@Ognl@isNotEmpty(isPledge)">
				AND IsPledge = #{isPledge}
			</if>
	       <if test="@Ognl@isNotEmpty(isInsurance)">
				AND IsInsurance = #{isInsurance}
			</if>
	       <if test="@Ognl@isNotEmpty(projectUsing)">
				AND ProjectUsing = #{projectUsing}
			</if>
	       <if test="@Ognl@isNotEmpty(projectLimit)">
				AND ProjectLimit = #{projectLimit}
			</if>
	       <if test="@Ognl@isNotEmpty(projectLimitTypeId)">
				AND ProjectLimitTypeId = #{projectLimitTypeId}
			</if>
	       <if test="@Ognl@isNotEmpty(valueDateChangeStyle)">
				AND ValueDateChangeStyle = #{valueDateChangeStyle}
			</if>
	       <if test="@Ognl@isNotEmpty(expireDateChangeStyle)">
				AND ExpireDateChangeStyle = #{expireDateChangeStyle}
			</if>
	       <if test="@Ognl@isNotEmpty(valueDateBegin)">
				AND ValueDate >= #{valueDateBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(valueDateEnd)">
				AND ValueDate &lt;= #{valueDateEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(expireDateBegin)">
				AND ExpireDate >= #{expireDateBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(expireDateEnd)">
				AND ExpireDate &lt;= #{expireDateEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(projectStatus)">
				AND ProjectStatus = #{projectStatus}
			</if>
	       <if test="@Ognl@isNotEmpty(originType)">
				AND OriginType = #{originType}
			</if>
	       <if test="@Ognl@isNotEmpty(originatorId)">
				AND OriginatorId = #{originatorId}
			</if>
	       <if test="@Ognl@isNotEmpty(createTimeBegin)">
				AND CreateTime >= #{createTimeBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(createTimeEnd)">
				AND CreateTime &lt;= #{createTimeEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(createOperatorId)">
				AND CreateOperatorId = #{createOperatorId}
			</if>
	       <if test="@Ognl@isNotEmpty(updateTimeBegin)">
				AND UpdateTime >= #{updateTimeBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(updateTimeEnd)">
				AND UpdateTime &lt;= #{updateTimeEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(upateOperatorId)">
				AND UpateOperatorId = #{upateOperatorId}
			</if>
	       <if test="@Ognl@isNotEmpty(versionNo)">
				AND VersionNo = #{versionNo}
			</if>
		</where>
	</sql>

    <select id="select" parameterType="java.util.Map" 
    	resultType="com.telecwin.fatp.po.project.ListingBasePo">
    	SELECT *
	    FROM listing_base 
		<include refid="where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
    
    <update id="updateProjectLimitByVersion">
        UPDATE listing_base SET
	        ProjectLimit = #{projectLimit} ,
	        ProjectLimitTypeId = #{projectLimitTypeId} ,
	        ValueDate = #{valueDate} ,
	        ExpireDate = #{expireDate} ,
	        UpdateTime = now() ,
	        VersionNo =  VersionNo + 1
        WHERE 
	        Id = #{id}  AND VersionNo = #{versionNo}
	</update>
	<select id="findById" parameterType="java.util.Map" resultType="com.telecwin.fatp.po.project.ListingBasePo">
    	SELECT *
	    FROM listing_base 
        WHERE 
	        Id = #{id} 
	</select>
</mapper>

